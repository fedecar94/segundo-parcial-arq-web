version: "3"

services:
  django: &pythonbuild
    build:
      context: .
    container_name: arqui_web_django
    image: arqui_web_django
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DEBUG=True
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    command: uvicorn --reload segundo_parcial_arq_web.asgi:application --host 0.0.0.0 --log-level debug --use-colors --loop uvloop
    networks:
      - arqui-web-main

  beat:
    <<: *pythonbuild
    ports: []
    container_name: arqui_web_beat
    command: celery -A segundo_parcial_arq_web.celery beat -l INFO

  worker:
    <<: *pythonbuild
    ports: []
    container_name: arqui_web_worker
    command: celery -A segundo_parcial_arq_web.celery worker -l INFO

  flower:
    container_name: arqui_web_flower
    image: mher/flower:0.9.7
    depends_on:
      - redis
    env_file:
      - .env
    ports:
      - "5555:5555"
    networks:
      - arqui-web-main

  redis:
    image: redis:5.0-alpine
    container_name: arqui_web_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - arqui-web-main

  db:
    image: postgres:13-alpine
    container_name: arqui_web_db
    env_file:
      - .env
    volumes:
      - arqui-web-db-data:/var/lib/postgresql/data
    networks:
      - arqui-web-main

volumes:
  arqui-web-db-data:

networks:
  arqui-web-main:
    driver: bridge

